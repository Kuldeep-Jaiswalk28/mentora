Develop the interactive front-end interface for Mentora, an AI-powered desktop mentor application, with the goal of making it feel like an intelligent, calm, and supportive teacher who guides the user through their day. The interface must be user-friendly, minimalist, and educational in tone. The user is a 17-year-old student balancing Class 11 studies, freelancing, AI tools, and certifications — Mentora must support all of this visually and interactively.

Include the following elements and behavior:

Primary UI Panels and Layout:

Design a clean dashboard with three main panels always visible:

Today’s Focus: Shows the current time-blocked schedule from the blueprint (no manual task entry), including subjects, freelancing slots, and AI practice sessions.

Your Progress: A visual progress tracker showing percentage completion of tasks in categories like Study, Freelancing, Certifications, AI Tools.

Mentora’s Advice: A dynamic message board where Mentora shares motivational quotes, insights, or feedback based on current progress.

Use a grid or card-based UI system, with responsive design and smooth transitions between panels.

Include a persistent top-bar showing time, upcoming task, and a profile picture (optional).

Voice and Text Input System:

Add a floating microphone icon for voice input using Web Speech API or similar (can be stubbed initially).

Add a text input box where the user can ask questions, request advice, or speak with the mentor conversationally.

Route both voice and text to the AI agent interface (local LLM or API-based), with the AI replying naturally in a teacherly tone.

Add a toggle for “Mentora Speaks” so the AI can reply audibly using TTS.

AI Mentor Chat Module:

Create a chatbot-style panel on the right or bottom of the app where users can talk to Mentora anytime.

It should feel like messaging a real coach — Mentora should answer questions like:

"What’s my next focus?"

"Why am I behind on web development?"

"Can you motivate me for my physics exam?"

The chat history should be persistent and scrollable, with date dividers.

Daily Review and Planning Modal:

Implement a daily summary modal that auto-pops every evening (configurable time), showing:

Completed tasks with checkmarks.

Missed tasks in red.

A motivational summary ("You did 3/5 tasks today. Great job staying focused on Cybersecurity!")

Include optional user feedback: "How did your day feel?" (Mood scale with emoji icons).

Task Flexibility and Rearrangement:

Allow drag-and-drop for reordering the preloaded task blocks for the current day.

When a task is moved, update the local schedule data temporarily but preserve the blueprint logic.

Provide tooltips when dragging tasks — e.g., “Dragging Web Dev Practice – this may affect your AI Practice session.”

Accessibility and Personalization:

Include adjustable font sizes and color themes (Night Mode, Focus Mode, Study Mode).

Create an option to switch between compact view and expanded mentoring view (where more advice is given).

Allow muting of all AI notifications temporarily with a “Do Not Disturb” toggle.

Build this UI using React (with TailwindCSS or Styled Components). Ensure all components are modular and ready for future chaining like emotion tracking, avatar animation, or mentor mood variation. Do not include task input forms — tasks are always loaded from the blueprint automatically. Focus on making the interface feel like a high-end digital teacher with personality and guidance built-in